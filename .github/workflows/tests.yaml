---
name: Security Regression Pipeline
on:
  pull_request:
  push:
    branches: [main]

  # Run once a week (see https://crontab.guru)
  schedule:
    - cron: "0 0 * * 0"
jobs:
  tests:
    name: Run security regression tests
    runs-on: ubuntu-latest
    steps:
      - name: Set up git repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: Install chrome
        uses: browser-actions/setup-chrome@latest

      - name: Install shfmt
        run: go install mvdan.cc/sh/v3/cmd/shfmt@latest

      - name: Install mage
        run: go install github.com/magefile/mage@latest

      - name: Compile magefile
        run: mage -d .mage/ -compile ../magefile

      - name: Set git config
        run: |
          git config --global user.name "John Doe"
          git config --global user.email johndoe@example.com

      - name: Clone caldera repo
        run: |
          pushd ..
          git clone https://github.com/mitre/caldera.git --recursive
          popd

      - name: Install pre-commit hooks
        run: ./magefile installDeps

      - name: Compile binary
        run: ./magefile compile linux

      - name: Create test environment
        run: ./bin/cst-linux TestEnv -1

      - name: Sleep for 20 seconds
        run: sleep 20s
        shell: bash

      - name: Make sure the container is running
        run: |
          while [[ -z "$(curl --silent localhost:8888 | grep 'login.js')" ]]; do
            pushd ../caldera && docker compose down && docker compose up -d; popd
            sleep 60
          done
        shell: bash

      - name: Run security regression test for first XSS
        run: ./bin/cst-linux StoredXSSUno

      - name: Run security regression test for second XSS
        run: ./bin/cst-linux StoredXSSDos

      - name: Destroy test environment
        run: ./bin/cst-linux TestEnv -d

      - name: Report failure
        uses: nashmaniac/create-issue-action@v1.1
        # Only report failures of pushes
        # (PRs failures are visible through the Checks
        # section) to the default branch
        if: failure() && github.event_name == 'push' && github.ref == 'refs/heads/main'
        with:
          title: üêõ Tests failed for ${{ github.sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          labels: kind/bug
          body: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
